#pre-Requirements:
#python >= 2.6
#requests >= 2.18.4
#google-auth >= 1.3.0

---
- name: create a GCP instance
  hosts: localhost
  gather_facts: no

#this variables will be used below  
  vars:
    gcp_project: 689651055144
    gcp_cred_kind: serviceaccount
    gcp_cred_file: /etc/ansible/gcp_serviceaccount_keys.josn
    zone: "us-central1-a"
    region: "us-central1"

  tasks:
#this task creates boot disk with ubuntu image
    - name: create a disk
      gcp_compute_disk:
         name: 'disk-instance'
         size_gb: 20
         source_image: 'projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20200129a'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
      register: disk

#this server deployed in default network      
    - name: create a network
      gcp_compute_network:
        name: 'default'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
           - https://www.googleapis.com/auth/compute
        state: present
      register: network


#this allocates an IP
    - name: create a address
      gcp_compute_address:
        name: 'address-instance'
        region: "{{ region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      register: address

#this task creates instance wth mentioned config
    - name: instance create
      gcp_compute_instance:
        state: present
        name: demo-ops
        machine_type: n1-standard-2
        disks:
          - auto_delete: true
            boot: true
            source: "{{disk}}"
        network_interfaces:
          - network: "{{network}}"
            access_configs:
              - name: 'External NAT'
                nat_ip: "{{address}}"
                type: 'ONE_TO_ONE_NAT'
        tags:
          items:
            - https-server

        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
           - https://www.googleapis.com/auth/compute
      register: instance
    - name: wait for SSH to come up
      wait_for: delay=1 host={{ address.address }} port=22 delay=10 timeout=60

